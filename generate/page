#!/bin/bash

source generate/helpers/validators.sh
source generate/helpers/names.sh
source generate/helpers/flags.sh
source generate/helpers/content.sh
source generate/helpers/files.sh
source generate/helpers/feedback.sh

CORE_PATH="$1"
FOLDER_NAME="$2"
SRC_DIR="src"
APP_DIR="app"
FILE_NAME="page"
CONTENT_TYPE="component"
TEMPLATE_DIR="generate/templates"
INTRO_DIRECTIVE="use client"
EXTENSION="tsx"
DIRECTORIES=("$SRC_DIR" "$APP_DIR")
DESTINATION_DIR="$SRC_DIR/$APP_DIR"

if [ "$CORE_PATH" != "/" ]; then
    IFS="/"
    read -ra PATH_DIRS <<<"$CORE_PATH"
    unset IFS

    DIRECTORIES+=("${PATH_DIRS[@]}")
    DESTINATION_DIR+="/$CORE_PATH"
fi

DIRECTORIES+=("$FOLDER_NAME")
DESTINATION_DIR+="/$FOLDER_NAME"
cd_list=""

for i in "${DIRECTORIES[@]}"; do
    mkdir -p "$i"
    if [ -d "$i" ]; then
        cd "$i"
        cd_list="../$cd_list"
    fi
done

cd "$cd_list"

flags_result=$(process_flags "$@")
eval "flags=($flags_result)"
MAIN_NAME=$(create_pascal_case_name "$FOLDER_NAME")
CORE_CONTENT=$(determine_content_for_core "$MAIN_NAME" "$CONTENT_TYPE")
LAYOUT_CONTENT=$(determine_content_for_core "$MAIN_NAME" "layout")
TEST_CONTENT=$(determine_content_for_test "$FILE_NAME" "$MAIN_NAME" "$CONTENT_TYPE")
final_content=$(adjust_content_for_page "$CORE_CONTENT")
final_test=$(adjust_content_for_page_test "$TEST_CONTENT")

if [ "${flags["CLIENT_FLAG"]}" = true ]; then
    final_content=$(prepend_directive_to_content "$INTRO_DIRECTIVE" "$CORE_CONTENT")
fi

create_file "$final_content" "$FILE_NAME" "$DESTINATION_DIR" "$EXTENSION" "false"
create_file "$LAYOUT_CONTENT" "layout" "$DESTINATION_DIR" "$EXTENSION" "false"
create_file "$final_test" "main" "$DESTINATION_DIR" "$EXTENSION" "true"
confirm_entity_created "$MAIN_NAME" "page"
